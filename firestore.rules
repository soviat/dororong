rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn(){ return request.auth != null; }
    function isOwner(uid){ return isSignedIn() && request.auth.uid == uid; }
    function isAdmin(){ return isSignedIn() && request.auth.token.admin == true; }
    function notBanned(){ return !(isSignedIn() && (request.auth.token.banned == true)); }

    match /users/{userId} {
      allow read, update: if isOwner(userId) && notBanned();
      allow create: if isSignedIn() && request.auth.uid == userId && notBanned();
      allow delete: if false;
    }

    match /listings/{id} {
      allow read: if true;
      allow create: if isSignedIn() && notBanned()
        && request.resource.data.ownerId == request.auth.uid
        && request.resource.data.title is string
        && request.resource.data.price is number
        && request.resource.data.createdAt is timestamp
        && request.resource.data.updatedAt is timestamp;
      allow update: if (isSignedIn() && request.resource.data.ownerId == resource.data.ownerId && notBanned()) || isAdmin();
      allow delete: if (isSignedIn() && resource.data.ownerId == request.auth.uid) || isAdmin();
    }

    match /posts/{postId} {
      allow read: if true;
      allow create: if isSignedIn() && request.resource.data.ownerId == request.auth.uid && notBanned();
      allow update, delete: if isSignedIn() && resource.data.ownerId == request.auth.uid;
    }
    match /posts/{postId}/likes/{uid} {
      allow read: if true;
      allow create, delete: if isSignedIn() && request.auth.uid == uid;
      allow update: if false;
    }
    match /posts/{postId}/comments/{cid} {
      allow read: if true;
      allow create: if isSignedIn() && request.resource.data.from == request.auth.uid && notBanned();
      allow delete: if isSignedIn() && request.auth.uid == resource.data.from;
    }

    match /reviews/{id} {
      allow read: if true;
      allow create: if isSignedIn() && request.resource.data.from == request.auth.uid && notBanned();
      allow delete: if false;
    }

    match /chats/{chatId} {
      allow read, write: if isSignedIn() && (request.auth.uid in resource.data.participants);
      allow create: if isSignedIn() && (request.resource.data.participants is list) && (request.auth.uid in request.resource.data.participants);
    }
    match /chats/{chatId}/messages/{msgId} {
      allow read, write: if isSignedIn() && (request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants);
    }

    match /alerts/{uid} { allow read, write: if isOwner(uid); }
    match /notifications/{id} {
      allow read: if isSignedIn() && resource.data.uid == request.auth.uid;
      allow create: if isAdmin() || isSignedIn();
      allow update: if isSignedIn() && request.auth.uid == resource.data.uid;
      allow delete: if false;
    }

    match /admin/{doc=**} { allow read, write: if isAdmin(); }
  }
}